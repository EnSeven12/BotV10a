import { Callback, Options, Stats } from "../types-public";
/**
 * A backward-compatible drop-in replacement for Node's built-in `fs.readdir()` function
 * that adds support for additional features like filtering, recursion, absolute paths, etc.
 */
export declare function readdirAsync(dir: string, callback: Callback<string[]>): void;
/**
 * A backward-compatible drop-in replacement for Node's built-in `fs.readdir()` function
 * that adds support for additional features like filtering, recursion, absolute paths, etc.
 */
export declare function readdirAsync(dir: string, options: undefined, callback: Callback<string[]>): void;
/**
 * A backward-compatible drop-in replacement for Node's built-in `fs.readdir()` function
 * that adds support for additional features like filtering, recursion, absolute paths, etc.
 */
export declare function readdirAsync(dir: string, options: Options & {
    stats?: false;
}, callback: Callback<string[]>): void;
/**
 * Asynchronous `readdir()` that returns an array of `Stats` objects via a callback.
 */
export declare function readdirAsync(dir: string, options: Options & {
    stats: true;
}, callback: Callback<Stats[]>): void;
/**
 * Asynchronous `readdir()` that returns its results via a Promise.
 */
export declare function readdirAsync(dir: string, options?: Options & {
    stats?: false;
}): Promise<string[]>;
/**
 * Asynchronous `readdir()` that returns an array of `Stats` objects via a Promise.
 */
export declare function readdirAsync(dir: string, options: Options & {
    stats: true;
}): Promise<Stats[]>;
