"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("./index");
const node_buffer_1 = require("node:buffer");
const otaku = new index_1.OtakudesuInstance();
/**
 * Just a test function
 */
function test() {
    return __awaiter(this, void 0, void 0, function* () {
        const extra = yield otaku.getExtraAnime('borto-sub-indo');
        const s = yield otaku.getStream(extra === null || extra === void 0 ? void 0 : extra.episodes[1].url);
        s === null || s === void 0 ? void 0 : s.on('data', (chunk) => {
            console.log(new node_buffer_1.Blob([Buffer.from(chunk)]).size, 'bytes downloaded');
        });
    });
}
;
test();
